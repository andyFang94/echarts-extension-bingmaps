{"version":3,"file":"echarts-extension-bingmaps.mjs","sources":["../packages/BingMapCoordSys.js","../packages/BingMapModel.js","../packages/BingMapView.js","../packages/index.js"],"sourcesContent":["import * as echarts from \"echarts\";\r\nconst { util: zrUtil, graphic, matrix } = echarts;\r\n\r\nfunction dataToCoordSize(dataSize, dataItem) {\r\n  dataItem = dataItem || [0, 0];\r\n  return zrUtil.map(\r\n    [0, 1],\r\n    function (dimIdx) {\r\n      const val = dataItem[dimIdx];\r\n      const halfSize = dataSize[dimIdx] / 2;\r\n      const p1 = [];\r\n      const p2 = [];\r\n      p1[dimIdx] = val - halfSize;\r\n      p2[dimIdx] = val + halfSize;\r\n      p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\r\n      return Math.abs(\r\n        this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]\r\n      );\r\n    },\r\n    this\r\n  );\r\n}\r\n\r\nfunction BingMapCoordSys(bingmap, api) {\r\n  this._bingmap = bingmap;\r\n  // this.dimensions = ['lng', 'lat'];\r\n  this._mapOffset = [0, 0];\r\n  this._api = api;\r\n}\r\n\r\nconst BingMapCoordSysProto = BingMapCoordSys.prototype;\r\n\r\n// BingMapCoordSysProto.dimensions = ['lng', 'lat'];\r\n\r\nBingMapCoordSysProto.setZoom = function (zoom) {\r\n  this._zoom = zoom;\r\n};\r\n\r\nBingMapCoordSysProto.setCenter = function (center) {\r\n  this._center = this._bingmap.tryLocationToPixel(\r\n    new Microsoft.Maps.Location(center[1], center[0])\r\n  );\r\n};\r\n\r\nBingMapCoordSysProto.setMapOffset = function (mapOffset) {\r\n  this._mapOffset = mapOffset;\r\n};\r\n\r\nBingMapCoordSysProto.setBingMap = function (bingmap) {\r\n  this._bingmap = bingmap;\r\n};\r\n\r\nBingMapCoordSysProto.getBingMap = function () {\r\n  return this._bingmap;\r\n};\r\n\r\nBingMapCoordSysProto.dataToPoint = function (data) {\r\n  const lnglat = new Microsoft.Maps.Location(data[1], data[0]);\r\n  const px = this._bingmap.tryLocationToPixel(\r\n    lnglat,\r\n    Microsoft.Maps.PixelReference.control\r\n  );\r\n  const mapOffset = this._mapOffset;\r\n  return [px.x - mapOffset[0], px.y - mapOffset[1]];\r\n};\r\n\r\nBingMapCoordSysProto.pointToData = function (pt) {\r\n  const mapOffset = this._mapOffset;\r\n  const lnglat = this._bingmap.tryPixelToLocation(\r\n    {\r\n      x: pt[0] + mapOffset[0],\r\n      y: pt[1] + mapOffset[1],\r\n    },\r\n    Microsoft.Maps.PixelReference.control\r\n  );\r\n\r\n  return [lnglat.longitude, lnglat.latitude];\r\n};\r\n\r\nBingMapCoordSysProto.getViewRect = function () {\r\n  const api = this._api;\r\n  return new graphic.BoundingRect(0, 0, api.getWidth(), api.getHeight());\r\n};\r\n\r\nBingMapCoordSysProto.getRoamTransform = function () {\r\n  return matrix.create();\r\n};\r\n\r\nBingMapCoordSysProto.prepareCustoms = function () {\r\n  const rect = this.getViewRect();\r\n  return {\r\n    coordSys: {\r\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\r\n      type: \"bingmap\",\r\n      x: rect.x,\r\n      y: rect.y,\r\n      width: rect.width,\r\n      height: rect.height,\r\n    },\r\n    api: {\r\n      coord: zrUtil.bind(this.dataToPoint, this),\r\n      size: zrUtil.bind(dataToCoordSize, this),\r\n    },\r\n  };\r\n};\r\n\r\nBingMapCoordSysProto.convertToPixel = function (ecModel, finder, value) {\r\n  return this.dataToPoint(value);\r\n};\r\n\r\nBingMapCoordSysProto.convertFromPixel = function (ecModel, finder, value) {\r\n  return this.pointToData(value);\r\n};\r\n\r\nBingMapCoordSys.create = function (ecModel, api) {\r\n  let bingmapCoordSys;\r\n  ecModel.eachComponent(\"bingmap\", function (bingmapModel) {\r\n    if (\r\n      typeof Microsoft === \"undefined\" ||\r\n      typeof Microsoft.Maps === \"undefined\" ||\r\n      typeof Microsoft.Maps.Map === \"undefined\"\r\n    ) {\r\n      throw new Error(\"Bing Map API has not been loaded completely yet.\");\r\n    }\r\n    if (bingmapCoordSys) {\r\n      throw new Error(\"Only one bingmap component is allowed\");\r\n    }\r\n    let bingmap = bingmapModel.getBingMap();\r\n    if (!bingmap) {\r\n      const root = api.getDom();\r\n      const painter = api.getZr().painter;\r\n      const viewportRoot = painter.getViewportRoot();\r\n      viewportRoot.className = \"ms-composite\";\r\n      viewportRoot.style.visibility = \"hidden\";\r\n\r\n      let bingmapRoot = root.querySelector(\".ec-extension-bing-map\");\r\n      if (bingmapRoot) {\r\n        // Reset viewport left and top, which will be changed\r\n        // in moving handler in BingMapView\r\n        viewportRoot.style.left = \"0px\";\r\n        viewportRoot.style.top = \"0px\";\r\n        root.removeChild(bingmapRoot);\r\n      }\r\n\r\n      bingmapRoot = document.createElement(\"div\");\r\n      bingmapRoot.className = \"ec-extension-bing-map\";\r\n      bingmapRoot.style.cssText =\r\n        \"position:absolute;top:0;left:0;right:0;bottom:0;\";\r\n      root.appendChild(bingmapRoot);\r\n\r\n      bingmap = new Microsoft.Maps.Map(bingmapRoot);\r\n      const mapOption = bingmapModel.get(\"mapOption\") || {};\r\n      bingmap.setOptions(mapOption);\r\n\r\n      bingmapRoot.querySelector(\".MicrosoftMap\").appendChild(viewportRoot);\r\n      viewportRoot.style.visibility = \"\";\r\n\r\n      bingmapModel.setBingMap(bingmap)\r\n      bingmapModel.setEChartsLayer(viewportRoot)\r\n\r\n      painter.getViewportRootOffset = function () {\r\n        return {\r\n          offsetLeft: 0,\r\n          offsetTop: 0,\r\n        };\r\n      };\r\n    }\r\n    let viewOption = bingmapModel.get(\"viewOption\");\r\n    let { center, zoom } = viewOption;\r\n    const normalizedCenter = [\r\n      center.lng != undefined ? center.lng : center[0],\r\n      center.lat != undefined ? center.lat : center[1],\r\n    ];\r\n\r\n    if (center && zoom) {\r\n      const bingmapCenter = bingmap.getCenter();\r\n      const bingmapZoom = bingmap.getZoom();\r\n      const centerOrZoomChanged = bingmapModel.centerOrZoomChanged(\r\n        [bingmapCenter.longitude, bingmapCenter.latitude],\r\n        bingmapZoom\r\n      );\r\n      if (centerOrZoomChanged) {\r\n        const pt = new Microsoft.Maps.Location(\r\n          normalizedCenter[1],\r\n          normalizedCenter[0]\r\n        );\r\n        bingmap.setView({\r\n          center: pt,\r\n          zoom: zoom,\r\n        });\r\n      }\r\n    }\r\n\r\n    bingmapCoordSys = new BingMapCoordSys(bingmap, api);\r\n    bingmapCoordSys.setMapOffset(bingmapModel.__mapOffset || [0, 0]);\r\n    bingmapCoordSys.setZoom(zoom);\r\n    bingmapCoordSys.setCenter(center);\r\n    bingmapModel.coordinateSystem = bingmapCoordSys;\r\n  });\r\n  ecModel.eachSeries(function (seriesModel) {\r\n    if (seriesModel.get(\"coordinateSystem\") === \"bingmap\") {\r\n      seriesModel.coordinateSystem = bingmapCoordSys;\r\n    }\r\n  });\r\n};\r\n\r\nBingMapCoordSysProto.dimensions = BingMapCoordSys.dimensions = [\"lng\", \"lat\"];\r\n\r\nBingMapCoordSysProto.type = \"bingmap\";\r\n\r\nexport default BingMapCoordSys;\r\n","import * as echarts from 'echarts';\r\n\r\nfunction v2Equal(a, b) {\r\n  return a && b && a[0] === b[0] && a[1] === b[1];\r\n}\r\n\r\nconst BingMapModel = echarts.extendComponentModel({\r\n  type: 'bingmap',\r\n  setBingMap: function(bingmap) {\r\n    this.__bingmap = bingmap;\r\n  },\r\n  getBingMap: function () {\r\n    return this.__bingmap;\r\n  },\r\n  setEChartsLayer: function(layer) {\r\n    this.__echartsLayer = layer;\r\n  },\r\n  getEChartsLayer: function() {\r\n    return this.__echartsLayer;\r\n  },\r\n  setCenterAndZoom: function (center, zoom) {\r\n    this.option.viewOption.center = center;\r\n    this.option.viewOption.zoom = zoom;\r\n  },\r\n  centerOrZoomChanged: function (center, zoom) {\r\n    const option = this.option.viewOption;\r\n    return !(v2Equal(center, option.center) && zoom === option.zoom);\r\n  },\r\n  defaultOption: {\r\n    viewOption: {\r\n      center: [113.493471, 23.169598],\r\n      zoom: 5,\r\n    },\r\n    mapOption: {\r\n      customMapStyle: {},\r\n    },\r\n  },\r\n});\r\n\r\nexport default BingMapModel\r\n","import * as echarts from 'echarts';\r\n\r\nconst BingMapView = echarts.extendComponentView({\r\n  type: 'bingmap',\r\n  render: function (bingMapModel, ecModel, api) {\r\n    let rendering = true;\r\n    const bingmap = bingMapModel.getBingMap();\r\n    const viewportRoot = api.getZr().painter.getViewportRoot();\r\n    const coordSys = bingMapModel.coordinateSystem;\r\n\r\n    const viewChangeHandler = function (arg) {\r\n      if (rendering) {\r\n        return;\r\n      }\r\n\r\n      const offsetEl = viewportRoot.parentNode.parentNode.parentNode;\r\n      const mapOffset = [-parseInt(offsetEl.style.left, 10) || 0, -parseInt(offsetEl.style.top, 10) || 0];\r\n      viewportRoot.style.left = mapOffset[0] + 'px';\r\n      viewportRoot.style.top = mapOffset[1] + 'px';\r\n      coordSys.setMapOffset(mapOffset);\r\n      bingMapModel.__mapOffset = mapOffset;\r\n      api.dispatchAction({\r\n        type: 'bingmapRoam',\r\n      });\r\n    };\r\n    Microsoft.Maps.Events.removeHandler(this._oldViewChangeHandler);\r\n    this._oldViewChangeHandler = Microsoft.Maps.Events.addHandler(bingmap, 'viewchange', viewChangeHandler);\r\n    Microsoft.Maps.Events.removeHandler(this._oldmapresize);\r\n    this._oldmapresize = Microsoft.Maps.Events.addHandler(bingmap, 'mapresize', viewChangeHandler);\r\n    rendering = false;\r\n  },\r\n  dispose() {\r\n    const component = this.__model\r\n    if (component) {\r\n      component.getBingMap().destroy()\r\n      component.setBingMap(null)\r\n      component.setEChartsLayer(null)\r\n      if (component.coordinateSystem) {\r\n        component.coordinateSystem.setBingMap(null)\r\n        component.coordinateSystem = null\r\n      }\r\n      delete this._oldViewChangeHandler\r\n      delete this._oldmapresize\r\n    }\r\n  },\r\n});\r\n\r\nexport default BingMapView;\r\n","import * as echarts from 'echarts';\r\n\r\nimport  BingMapCoordSys from './BingMapCoordSys';\r\n\r\nimport './BingMapModel';\r\n\r\nimport './BingMapView';\r\n\r\necharts.registerCoordinateSystem('bingmap', BingMapCoordSys);\r\n\r\necharts.registerAction({\r\n  type: 'bingmapRoam',\r\n  event: 'bingmapRoam',\r\n  update: 'updateLayout',\r\n}, function (payload, ecModel) {\r\n  ecModel.eachComponent('bingmap', function (bingMapModel) {\r\n    const bingmap = bingMapModel.getBingMap();\r\n    const center = bingmap.getCenter();\r\n    bingMapModel.setCenterAndZoom([center.longitude, center.latitude], bingmap.getZoom());\r\n  });\r\n});\r\n"],"names":["zrUtil","graphic","matrix","echarts","dataToCoordSize","dataSize","dataItem","dimIdx","val","halfSize","p1","p2","BingMapCoordSys","bingmap","api","BingMapCoordSysProto","zoom","center","mapOffset","data","lnglat","px","pt","rect","ecModel","finder","value","bingmapCoordSys","bingmapModel","root","painter","viewportRoot","bingmapRoot","mapOption","viewOption","normalizedCenter","bingmapCenter","bingmapZoom","seriesModel","v2Equal","a","b","layer","option","bingMapModel","rendering","coordSys","viewChangeHandler","arg","offsetEl","component","payload"],"mappings":"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"}