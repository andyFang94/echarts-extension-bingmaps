{"version":3,"file":"echarts-extension-bingmaps.umd.js","sources":["../packages/BingMapCoordSys.js","../packages/BingMapModel.js","../packages/BingMapView.js","../packages/index.js"],"sourcesContent":["import * as echarts from \"echarts\";\r\nconst { util: zrUtil, graphic, matrix } = echarts;\r\n\r\nfunction dataToCoordSize(dataSize, dataItem) {\r\n  dataItem = dataItem || [0, 0];\r\n  return zrUtil.map(\r\n    [0, 1],\r\n    function (dimIdx) {\r\n      const val = dataItem[dimIdx];\r\n      const halfSize = dataSize[dimIdx] / 2;\r\n      const p1 = [];\r\n      const p2 = [];\r\n      p1[dimIdx] = val - halfSize;\r\n      p2[dimIdx] = val + halfSize;\r\n      p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\r\n      return Math.abs(\r\n        this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]\r\n      );\r\n    },\r\n    this\r\n  );\r\n}\r\n\r\nfunction BingMapCoordSys(bingmap, api) {\r\n  this._bingmap = bingmap;\r\n  // this.dimensions = ['lng', 'lat'];\r\n  this._mapOffset = [0, 0];\r\n  this._api = api;\r\n}\r\n\r\nconst BingMapCoordSysProto = BingMapCoordSys.prototype;\r\n\r\n// BingMapCoordSysProto.dimensions = ['lng', 'lat'];\r\n\r\nBingMapCoordSysProto.setZoom = function (zoom) {\r\n  this._zoom = zoom;\r\n};\r\n\r\nBingMapCoordSysProto.setCenter = function (center) {\r\n  this._center = this._bingmap.tryLocationToPixel(\r\n    new Microsoft.Maps.Location(center[1], center[0])\r\n  );\r\n};\r\n\r\nBingMapCoordSysProto.setMapOffset = function (mapOffset) {\r\n  this._mapOffset = mapOffset;\r\n};\r\n\r\nBingMapCoordSysProto.setBingMap = function (bingmap) {\r\n  this._bingmap = bingmap;\r\n};\r\n\r\nBingMapCoordSysProto.getBingMap = function () {\r\n  return this._bingmap;\r\n};\r\n\r\nBingMapCoordSysProto.dataToPoint = function (data) {\r\n  const lnglat = new Microsoft.Maps.Location(data[1], data[0]);\r\n  const px = this._bingmap.tryLocationToPixel(\r\n    lnglat,\r\n    Microsoft.Maps.PixelReference.control\r\n  );\r\n  const mapOffset = this._mapOffset;\r\n  return [px.x - mapOffset[0], px.y - mapOffset[1]];\r\n};\r\n\r\nBingMapCoordSysProto.pointToData = function (pt) {\r\n  const mapOffset = this._mapOffset;\r\n  const lnglat = this._bingmap.tryPixelToLocation(\r\n    {\r\n      x: pt[0] + mapOffset[0],\r\n      y: pt[1] + mapOffset[1],\r\n    },\r\n    Microsoft.Maps.PixelReference.control\r\n  );\r\n\r\n  return [lnglat.longitude, lnglat.latitude];\r\n};\r\n\r\nBingMapCoordSysProto.getViewRect = function () {\r\n  const api = this._api;\r\n  return new graphic.BoundingRect(0, 0, api.getWidth(), api.getHeight());\r\n};\r\n\r\nBingMapCoordSysProto.getRoamTransform = function () {\r\n  return matrix.create();\r\n};\r\n\r\nBingMapCoordSysProto.prepareCustoms = function () {\r\n  const rect = this.getViewRect();\r\n  return {\r\n    coordSys: {\r\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\r\n      type: \"bingmap\",\r\n      x: rect.x,\r\n      y: rect.y,\r\n      width: rect.width,\r\n      height: rect.height,\r\n    },\r\n    api: {\r\n      coord: zrUtil.bind(this.dataToPoint, this),\r\n      size: zrUtil.bind(dataToCoordSize, this),\r\n    },\r\n  };\r\n};\r\n\r\nBingMapCoordSysProto.convertToPixel = function (ecModel, finder, value) {\r\n  return this.dataToPoint(value);\r\n};\r\n\r\nBingMapCoordSysProto.convertFromPixel = function (ecModel, finder, value) {\r\n  return this.pointToData(value);\r\n};\r\n\r\nBingMapCoordSys.create = function (ecModel, api) {\r\n  let bingmapCoordSys;\r\n  ecModel.eachComponent(\"bingmap\", function (bingmapModel) {\r\n    if (\r\n      typeof Microsoft === \"undefined\" ||\r\n      typeof Microsoft.Maps === \"undefined\" ||\r\n      typeof Microsoft.Maps.Map === \"undefined\"\r\n    ) {\r\n      throw new Error(\"Bing Map API has not been loaded completely yet.\");\r\n    }\r\n    if (bingmapCoordSys) {\r\n      throw new Error(\"Only one bingmap component is allowed\");\r\n    }\r\n    let bingmap = bingmapModel.getBingMap();\r\n    if (!bingmap) {\r\n      const root = api.getDom();\r\n      const painter = api.getZr().painter;\r\n      const viewportRoot = painter.getViewportRoot();\r\n      viewportRoot.className = \"ms-composite\";\r\n      viewportRoot.style.visibility = \"hidden\";\r\n\r\n      let bingmapRoot = root.querySelector(\".ec-extension-bing-map\");\r\n      if (bingmapRoot) {\r\n        // Reset viewport left and top, which will be changed\r\n        // in moving handler in BingMapView\r\n        viewportRoot.style.left = \"0px\";\r\n        viewportRoot.style.top = \"0px\";\r\n        root.removeChild(bingmapRoot);\r\n      }\r\n\r\n      bingmapRoot = document.createElement(\"div\");\r\n      bingmapRoot.className = \"ec-extension-bing-map\";\r\n      bingmapRoot.style.cssText =\r\n        \"position:absolute;top:0;left:0;right:0;bottom:0;\";\r\n      root.appendChild(bingmapRoot);\r\n\r\n      bingmap = new Microsoft.Maps.Map(bingmapRoot);\r\n      const mapOption = bingmapModel.get(\"mapOption\") || {};\r\n      bingmap.setOptions(mapOption);\r\n\r\n      bingmapRoot.querySelector(\".MicrosoftMap\").appendChild(viewportRoot);\r\n      viewportRoot.style.visibility = \"\";\r\n\r\n      bingmapModel.setBingMap(bingmap)\r\n      bingmapModel.setEChartsLayer(viewportRoot)\r\n\r\n      painter.getViewportRootOffset = function () {\r\n        return {\r\n          offsetLeft: 0,\r\n          offsetTop: 0,\r\n        };\r\n      };\r\n    }\r\n    let viewOption = bingmapModel.get(\"viewOption\");\r\n    let { center, zoom } = viewOption;\r\n    const normalizedCenter = [\r\n      center.lng != undefined ? center.lng : center[0],\r\n      center.lat != undefined ? center.lat : center[1],\r\n    ];\r\n\r\n    if (center && zoom) {\r\n      const bingmapCenter = bingmap.getCenter();\r\n      const bingmapZoom = bingmap.getZoom();\r\n      const centerOrZoomChanged = bingmapModel.centerOrZoomChanged(\r\n        [bingmapCenter.longitude, bingmapCenter.latitude],\r\n        bingmapZoom\r\n      );\r\n      if (centerOrZoomChanged) {\r\n        const pt = new Microsoft.Maps.Location(\r\n          normalizedCenter[1],\r\n          normalizedCenter[0]\r\n        );\r\n        bingmap.setView({\r\n          center: pt,\r\n          zoom: zoom,\r\n        });\r\n      }\r\n    }\r\n\r\n    bingmapCoordSys = new BingMapCoordSys(bingmap, api);\r\n    bingmapCoordSys.setMapOffset(bingmapModel.__mapOffset || [0, 0]);\r\n    bingmapCoordSys.setZoom(zoom);\r\n    bingmapCoordSys.setCenter(center);\r\n    bingmapModel.coordinateSystem = bingmapCoordSys;\r\n  });\r\n  ecModel.eachSeries(function (seriesModel) {\r\n    if (seriesModel.get(\"coordinateSystem\") === \"bingmap\") {\r\n      seriesModel.coordinateSystem = bingmapCoordSys;\r\n    }\r\n  });\r\n};\r\n\r\nBingMapCoordSysProto.dimensions = BingMapCoordSys.dimensions = [\"lng\", \"lat\"];\r\n\r\nBingMapCoordSysProto.type = \"bingmap\";\r\n\r\nexport default BingMapCoordSys;\r\n","import * as echarts from 'echarts';\r\n\r\nfunction v2Equal(a, b) {\r\n  return a && b && a[0] === b[0] && a[1] === b[1];\r\n}\r\n\r\nconst BingMapModel = echarts.extendComponentModel({\r\n  type: 'bingmap',\r\n  setBingMap: function(bingmap) {\r\n    this.__bingmap = bingmap;\r\n  },\r\n  getBingMap: function () {\r\n    return this.__bingmap;\r\n  },\r\n  setEChartsLayer: function(layer) {\r\n    this.__echartsLayer = layer;\r\n  },\r\n  getEChartsLayer: function() {\r\n    return this.__echartsLayer;\r\n  },\r\n  setCenterAndZoom: function (center, zoom) {\r\n    this.option.viewOption.center = center;\r\n    this.option.viewOption.zoom = zoom;\r\n  },\r\n  centerOrZoomChanged: function (center, zoom) {\r\n    const option = this.option.viewOption;\r\n    return !(v2Equal(center, option.center) && zoom === option.zoom);\r\n  },\r\n  defaultOption: {\r\n    viewOption: {\r\n      center: [113.493471, 23.169598],\r\n      zoom: 5,\r\n    },\r\n    mapOption: {\r\n      customMapStyle: {},\r\n    },\r\n  },\r\n});\r\n\r\nexport default BingMapModel\r\n","import * as echarts from 'echarts';\r\n\r\nconst BingMapView = echarts.extendComponentView({\r\n  type: 'bingmap',\r\n  render: function (bingMapModel, ecModel, api) {\r\n    let rendering = true;\r\n    const bingmap = bingMapModel.getBingMap();\r\n    const viewportRoot = api.getZr().painter.getViewportRoot();\r\n    const coordSys = bingMapModel.coordinateSystem;\r\n\r\n    const viewChangeHandler = function (arg) {\r\n      if (rendering) {\r\n        return;\r\n      }\r\n\r\n      const offsetEl = viewportRoot.parentNode.parentNode.parentNode;\r\n      const mapOffset = [-parseInt(offsetEl.style.left, 10) || 0, -parseInt(offsetEl.style.top, 10) || 0];\r\n      viewportRoot.style.left = mapOffset[0] + 'px';\r\n      viewportRoot.style.top = mapOffset[1] + 'px';\r\n      coordSys.setMapOffset(mapOffset);\r\n      bingMapModel.__mapOffset = mapOffset;\r\n      api.dispatchAction({\r\n        type: 'bingmapRoam',\r\n      });\r\n    };\r\n    Microsoft.Maps.Events.removeHandler(this._oldViewChangeHandler);\r\n    this._oldViewChangeHandler = Microsoft.Maps.Events.addHandler(bingmap, 'viewchange', viewChangeHandler);\r\n    Microsoft.Maps.Events.removeHandler(this._oldmapresize);\r\n    this._oldmapresize = Microsoft.Maps.Events.addHandler(bingmap, 'mapresize', viewChangeHandler);\r\n    rendering = false;\r\n  },\r\n  dispose() {\r\n    const component = this.__model\r\n    if (component) {\r\n      component.getBingMap().destroy()\r\n      component.setBingMap(null)\r\n      component.setEChartsLayer(null)\r\n      if (component.coordinateSystem) {\r\n        component.coordinateSystem.setBingMap(null)\r\n        component.coordinateSystem = null\r\n      }\r\n      delete this._oldViewChangeHandler\r\n      delete this._oldmapresize\r\n    }\r\n  },\r\n});\r\n\r\nexport default BingMapView;\r\n","import * as echarts from 'echarts';\r\n\r\nimport  BingMapCoordSys from './BingMapCoordSys';\r\n\r\nimport './BingMapModel';\r\n\r\nimport './BingMapView';\r\n\r\necharts.registerCoordinateSystem('bingmap', BingMapCoordSys);\r\n\r\necharts.registerAction({\r\n  type: 'bingmapRoam',\r\n  event: 'bingmapRoam',\r\n  update: 'updateLayout',\r\n}, function (payload, ecModel) {\r\n  ecModel.eachComponent('bingmap', function (bingMapModel) {\r\n    const bingmap = bingMapModel.getBingMap();\r\n    const center = bingmap.getCenter();\r\n    bingMapModel.setCenterAndZoom([center.longitude, center.latitude], bingmap.getZoom());\r\n  });\r\n});\r\n"],"names":["zrUtil","graphic","matrix","echarts","dataToCoordSize","dataSize","dataItem","dimIdx","val","halfSize","p1","p2","BingMapCoordSys","bingmap","api","BingMapCoordSysProto","zoom","center","mapOffset","data","lnglat","px","pt","rect","ecModel","finder","value","bingmapCoordSys","bingmapModel","root","painter","viewportRoot","bingmapRoot","mapOption","viewOption","normalizedCenter","bingmapCenter","bingmapZoom","seriesModel","v2Equal","a","b","echarts__namespace","layer","option","bingMapModel","rendering","coordSys","viewChangeHandler","arg","offsetEl","component","payload"],"mappings":"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"}